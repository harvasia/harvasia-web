{"version":3,"sources":["types.jsx","components/Com.jsx","actions.jsx","App.js","reportWebVitals.js","reducers.jsx","index.js"],"names":["SET_NAME","Com","dispatch","useDispatch","name","useSelector","state","React","useEffect","type","types","payload","setName","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","reducer","newName","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAaA,EAAW,W,WCiBTC,EAbH,WACR,IAAMC,EAAWC,cACXC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAMxC,OAJAG,IAAMC,WAAU,WACZN,ECPD,SAAiBE,GACpB,MAAO,CACHK,KAAMC,EACNC,QAASP,GDIAQ,CAAQ,WAIjB,6BAAKR,KEFES,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCJRQ,EAAY,CACdpB,KAAM,IAgBKqB,EAbC,WAAyC,IAAxCnB,EAAuC,uDAA/BkB,EAA+B,yCAAnBf,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,QACvC,OAAQF,GACJ,KAAKC,EACD,IAAIgB,EAAUf,EACd,OAAO,2BACAL,GADP,IAEIF,KAAMsB,IAEd,QACI,OAAOpB,I,OCPbqB,EAAQC,YAAYC,EACxBC,OAAOC,8BAAgCD,OAAOC,gCAEhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.0d77ab03.chunk.js","sourcesContent":["export const SET_NAME = \"SET_NAME\"","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setName } from '../actions'\n\nconst Com = () => {\n    const dispatch = useDispatch()\n    const name = useSelector(state => state.name)\n\n    React.useEffect(() => {\n        dispatch(setName(\"hhh\"))\n    })\n\n    return (\n        <h1>{name}</h1>\n    )\n}\n\nexport default Com;","import * as types from './types'\n\nexport function setName(name) {\n    return {\n        type: types.SET_NAME,\n        payload: name\n    }\n}","import './App.css';\nimport Com from './components/Com'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Com />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from './types'\n\n\nconst initState = {\n    name: '',\n}\n\nconst reducer = (state = initState, {type, payload}) => {\n    switch (type) {\n        case types.SET_NAME:\n            let newName = payload\n            return {\n                ...state,\n                name: newName\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducers from './reducers'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}